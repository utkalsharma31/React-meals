{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\ReactMeals\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isSixChars = value => value.trim().length === 6;\nconst Checkout = props => {\n  _s();\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    address: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const addressInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAddressIsValid = !isEmpty(enteredAddress);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isSixChars(enteredPostalCode);\n    setFormValidity({\n      name: enteredNameIsValid,\n      address: enteredAddressIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredAddressIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        ref: addressInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), !formValidity.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), !formValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Postal Code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"Z+vjFgIJpH7bKxhRX88RtZydHEw=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","jsxDEV","_jsxDEV","isEmpty","value","trim","isSixChars","length","Checkout","props","_s","formValidity","setFormValidity","name","address","city","postalCode","nameInputRef","addressInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredAddress","enteredPostalCode","enteredCity","enteredNameIsValid","enteredAddressIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","className","form","onSubmit","children","control","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/ReactMeals/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isSixChars = value => value.trim().length === 6;\r\n\r\nconst Checkout = (props) => {\r\n    const [formValidity, setFormValidity] = useState({\r\n        name: true,\r\n        address: true,\r\n        city: true,\r\n        postalCode: true\r\n    });\r\n\r\n    const nameInputRef = useRef();\r\n    const addressInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredAddress = addressInputRef.current.value;\r\n        const enteredPostalCode = postalCodeInputRef.current.value;\r\n        const enteredCity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredAddressIsValid = !isEmpty(enteredAddress);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredPostalCodeIsValid = isSixChars(enteredPostalCode);\r\n\r\n        setFormValidity({\r\n            name: enteredNameIsValid,\r\n            address: enteredAddressIsValid,\r\n            city: enteredCityIsValid,\r\n            postalCode: enteredPostalCodeIsValid\r\n        });\r\n\r\n        const formIsValid = \r\n            enteredNameIsValid && \r\n            enteredAddressIsValid && \r\n            enteredCityIsValid && \r\n            enteredPostalCodeIsValid;\r\n\r\n        if(!formIsValid) {\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n        <div className={classes.control}>\r\n            <label htmlFor='name'>Your Name</label>\r\n            <input type='text' id='name' ref={nameInputRef}/>\r\n            {!formValidity.name && <p>Please enter a valid name!</p>}\r\n        </div>\r\n        <div className={classes.control}>\r\n            <label htmlFor='address'>Address</label>\r\n            <input type='text' id='address' ref={addressInputRef}/>\r\n            {!formValidity.address && <p>Please enter a valid address!</p>}\r\n        </div>\r\n        <div className={classes.control}>\r\n            <label htmlFor='postal'>Postal Code</label>\r\n            <input type='text' id='postal' ref={postalCodeInputRef}/>\r\n            {!formValidity.postalCode && <p>Please enter a valid Postal Code!</p>}\r\n        </div>\r\n        <div className={classes.control}>\r\n            <label htmlFor='city'>City</label>\r\n            <input type='text' id='city' ref={cityInputRef}/>\r\n            {!formValidity.city && <p>Please enter a valid city!</p>}\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button type='button' onClick={props.onCancel}>\r\n            Cancel\r\n            </button>\r\n            <button className={classes.submit}>Confirm</button>\r\n        </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}